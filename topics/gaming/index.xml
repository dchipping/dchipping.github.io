<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gaming on Daniel Chipping</title>
    <link>https://dchipping.github.io/topics/gaming/</link>
    <description>Recent content in gaming on Daniel Chipping</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>Â© Copyright notice</copyright>
    <lastBuildDate>Sat, 05 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dchipping.github.io/topics/gaming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rendering real-time physics: video game physics engines</title>
      <link>https://dchipping.github.io/posts/physics-engines/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dchipping.github.io/posts/physics-engines/</guid>
      <description>Augmented reality in action &amp;ndash; a fast, portable and realistic physics engine is needed to calculate the collisions with complex surfaces in the real world (Lightship SDK)
  Curiosity has recently led me down the road of extended reality (XR), a catch-all term encompassing: Augmented Reality (AR), Mixed Reality (MR) and Virtual Reality (VR). Development of XR experiences interestingly uses much of the same tooling used to create video games, often using game engines like Unity to build and leverage technology in order to create virtual environments.</description>
    </item>
    
  </channel>
</rss>
